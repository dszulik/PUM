// Generated by view binder compiler. Do not edit!
package com.example.studenthardlife.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.studenthardlife.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addButton;

  @NonNull
  public final LinearLayout contentLayout;

  @NonNull
  public final RecyclerView dataBaseRecyclerView;

  @NonNull
  public final LinearLayout deadlineLayout;

  @NonNull
  public final EditText editTextContent;

  @NonNull
  public final EditText editTextDeadline;

  @NonNull
  public final EditText editTextIsdone;

  @NonNull
  public final EditText editTextTitle;

  @NonNull
  public final LinearLayout idDoneLayout;

  @NonNull
  public final LinearLayout titleLayout;

  private FragmentListBinding(@NonNull ConstraintLayout rootView, @NonNull Button addButton,
      @NonNull LinearLayout contentLayout, @NonNull RecyclerView dataBaseRecyclerView,
      @NonNull LinearLayout deadlineLayout, @NonNull EditText editTextContent,
      @NonNull EditText editTextDeadline, @NonNull EditText editTextIsdone,
      @NonNull EditText editTextTitle, @NonNull LinearLayout idDoneLayout,
      @NonNull LinearLayout titleLayout) {
    this.rootView = rootView;
    this.addButton = addButton;
    this.contentLayout = contentLayout;
    this.dataBaseRecyclerView = dataBaseRecyclerView;
    this.deadlineLayout = deadlineLayout;
    this.editTextContent = editTextContent;
    this.editTextDeadline = editTextDeadline;
    this.editTextIsdone = editTextIsdone;
    this.editTextTitle = editTextTitle;
    this.idDoneLayout = idDoneLayout;
    this.titleLayout = titleLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addButton;
      Button addButton = ViewBindings.findChildViewById(rootView, id);
      if (addButton == null) {
        break missingId;
      }

      id = R.id.content_layout;
      LinearLayout contentLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentLayout == null) {
        break missingId;
      }

      id = R.id.dataBaseRecyclerView;
      RecyclerView dataBaseRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (dataBaseRecyclerView == null) {
        break missingId;
      }

      id = R.id.deadline_layout;
      LinearLayout deadlineLayout = ViewBindings.findChildViewById(rootView, id);
      if (deadlineLayout == null) {
        break missingId;
      }

      id = R.id.edit_text_content;
      EditText editTextContent = ViewBindings.findChildViewById(rootView, id);
      if (editTextContent == null) {
        break missingId;
      }

      id = R.id.edit_text_deadline;
      EditText editTextDeadline = ViewBindings.findChildViewById(rootView, id);
      if (editTextDeadline == null) {
        break missingId;
      }

      id = R.id.edit_text_isdone;
      EditText editTextIsdone = ViewBindings.findChildViewById(rootView, id);
      if (editTextIsdone == null) {
        break missingId;
      }

      id = R.id.edit_text_title;
      EditText editTextTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTextTitle == null) {
        break missingId;
      }

      id = R.id.id_done_layout;
      LinearLayout idDoneLayout = ViewBindings.findChildViewById(rootView, id);
      if (idDoneLayout == null) {
        break missingId;
      }

      id = R.id.title_layout;
      LinearLayout titleLayout = ViewBindings.findChildViewById(rootView, id);
      if (titleLayout == null) {
        break missingId;
      }

      return new FragmentListBinding((ConstraintLayout) rootView, addButton, contentLayout,
          dataBaseRecyclerView, deadlineLayout, editTextContent, editTextDeadline, editTextIsdone,
          editTextTitle, idDoneLayout, titleLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
